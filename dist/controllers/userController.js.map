{"version":3,"file":"userController.js","sourceRoot":"","sources":["../../src/controllers/userController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport { User } from \"../models/userModel\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport {\r\n  deleteFileFromS3,\r\n  uploadEmiratesIdDocument,\r\n  uploadPassportDocument,\r\n  uploadSignatureImage,\r\n  uploadUserProfileImage,\r\n} from \"../utils/uploadConf\";\r\nconst SALT_ROUNDS = 10;\r\n\r\nexport const createUser = asyncHandler(async (req: Request, res: Response) => {\r\n  const {\r\n    email,\r\n    password,\r\n    phoneNumbers,\r\n    firstName,\r\n    lastName,\r\n    role,\r\n    salary,\r\n    accountNumber,\r\n    emiratesId,\r\n    passportNumber,\r\n  } = req.body;\r\n\r\n  if (\r\n    !email ||\r\n    !password ||\r\n    !phoneNumbers ||\r\n    !firstName ||\r\n    !lastName ||\r\n    !role\r\n  ) {\r\n    throw new ApiError(400, \"All required fields are missing\");\r\n  }\r\n\r\n  // Validate salary for non-admin roles\r\n  if (\r\n    ![\"super_admin\", \"admin\"].includes(role) &&\r\n    (salary === undefined || salary === null)\r\n  ) {\r\n    throw new ApiError(400, \"Salary is required for this role\");\r\n  }\r\n\r\n  const existingUser = await User.findOne({ email });\r\n  if (existingUser) {\r\n    throw new ApiError(400, \"Email already in use\");\r\n  }\r\n\r\n  const hashedPassword = await bcrypt.hash(password, SALT_ROUNDS);\r\n\r\n  // Handle all file uploads\r\n  let profileImageUrl: string | undefined;\r\n  let signatureImageUrl: string | undefined;\r\n  let emiratesIdDocumentUrl: string | undefined;\r\n  let passportDocumentUrl: string | undefined;\r\n\r\n  // Process profile image\r\n  if (req.files?.profileImage?.[0]) {\r\n    const result = await uploadUserProfileImage(req.files.profileImage[0]);\r\n    if (result.success && result.uploadData) {\r\n      profileImageUrl = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  // Process signature image\r\n  if (req.files?.signatureImage?.[0]) {\r\n    const result = await uploadSignatureImage(req.files.signatureImage[0]);\r\n    if (result.success && result.uploadData) {\r\n      signatureImageUrl = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  // Process Emirates ID document\r\n  if (req.files?.emiratesIdDocument?.[0]) {\r\n    const result = await uploadEmiratesIdDocument(\r\n      req.files.emiratesIdDocument[0]\r\n    );\r\n    if (result.success && result.uploadData) {\r\n      emiratesIdDocumentUrl = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  // Process Passport document\r\n  if (req.files?.passportDocument?.[0]) {\r\n    const result = await uploadPassportDocument(req.files.passportDocument[0]);\r\n    if (result.success && result.uploadData) {\r\n      passportDocumentUrl = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  const user = await User.create({\r\n    email,\r\n    password: hashedPassword,\r\n    phoneNumbers: Array.isArray(phoneNumbers) ? phoneNumbers : [phoneNumbers],\r\n    firstName,\r\n    lastName,\r\n    role,\r\n    salary: [\"super_admin\", \"admin\"].includes(role) ? undefined : salary,\r\n    accountNumber,\r\n    emiratesId,\r\n    emiratesIdDocument: emiratesIdDocumentUrl,\r\n    passportNumber,\r\n    passportDocument: passportDocumentUrl,\r\n    profileImage: profileImageUrl,\r\n    signatureImage: signatureImageUrl,\r\n    createdBy: req.user?.userId,\r\n  });\r\n\r\n  res.status(201).json(new ApiResponse(201, user, \"User created successfully\"));\r\n});\r\n\r\nexport const getUsers = asyncHandler(async (req: Request, res: Response) => {\r\n  const page = parseInt(req.query.page as string) || 1;\r\n  const limit = parseInt(req.query.limit as string) || 10;\r\n  const skip = (page - 1) * limit;\r\n\r\n  // Build the filter object dynamically\r\n  const filter: any = {};\r\n\r\n  // Filter by role (if provided)\r\n  if (req.query.role) {\r\n    filter.role = req.query.role;\r\n  }\r\n\r\n  // Filter by active status (if provided)\r\n  if (req.query.isActive) {\r\n    filter.isActive = req.query.isActive === \"true\";\r\n  }\r\n\r\n  // Search functionality (if search term provided)\r\n  if (req.query.search) {\r\n    const searchTerm = req.query.search as string;\r\n    filter.$or = [\r\n      { firstName: { $regex: searchTerm, $options: \"i\" } }, // Case-insensitive\r\n      { lastName: { $regex: searchTerm, $options: \"i\" } },\r\n      { email: { $regex: searchTerm, $options: \"i\" } },\r\n      // If you want to search by full name (firstName + lastName)\r\n      {\r\n        $expr: {\r\n          $regexMatch: {\r\n            input: { $concat: [\"$firstName\", \" \", \"$lastName\"] },\r\n            regex: searchTerm,\r\n            options: \"i\",\r\n          },\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  // Count total matching documents (for pagination)\r\n  const total = await User.countDocuments(filter);\r\n\r\n  // Fetch users with applied filters, pagination, and sorting\r\n  const users = await User.find(filter, { password: 0 }) // Exclude password\r\n    .skip(skip)\r\n    .limit(limit)\r\n    .sort({ createdAt: -1 }); // Newest first\r\n\r\n  // Return response with pagination metadata\r\n  res.status(200).json(\r\n    new ApiResponse(\r\n      200,\r\n      {\r\n        users,\r\n        pagination: {\r\n          total,\r\n          page,\r\n          limit,\r\n          totalPages: Math.ceil(total / limit),\r\n          hasNextPage: page * limit < total,\r\n          hasPreviousPage: page > 1,\r\n        },\r\n      },\r\n      \"Users retrieved successfully\"\r\n    )\r\n  );\r\n});\r\n\r\nexport const getUser = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const user = await User.findById(id).select(\"-password\");\r\n  if (!user) {\r\n    throw new ApiError(404, \"User not found\");\r\n  }\r\n\r\n  // Users can view their own profile, admins can view any\r\n  if (\r\n    user._id.toString() !== req.user?.userId &&\r\n    req.user?.role !== \"admin\" &&\r\n    req.user?.role !== \"super_admin\"\r\n  ) {\r\n    throw new ApiError(403, \"Forbidden: Insufficient permissions\");\r\n  }\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, user, \"User retrieved successfully\"));\r\n});\r\n\r\nexport const updateUser = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  const updateData = req.body;\r\n\r\n  const user = await User.findById(id);\r\n  if (!user) {\r\n    throw new ApiError(404, \"User not found\");\r\n  }\r\n\r\n  // Authorization check\r\n  if (\r\n    user._id.toString() !== req.user?.userId &&\r\n    req.user?.role !== \"admin\" &&\r\n    req.user?.role !== \"super_admin\"\r\n  ) {\r\n    throw new ApiError(403, \"Forbidden: Insufficient permissions\");\r\n  }\r\n\r\n  // Handle password update\r\n  if (updateData.password) {\r\n    updateData.password = await bcrypt.hash(updateData.password, SALT_ROUNDS);\r\n  }\r\n\r\n  // Process profile image if uploaded\r\n  if (req.files?.profileImage?.[0]) {\r\n    const result = await uploadUserProfileImage(req.files.profileImage[0]);\r\n    if (result.success && result.uploadData) {\r\n      // Delete old profile image if exists\r\n      if (user.profileImage) {\r\n        await deleteFileFromS3(user.profileImage).catch(console.error);\r\n      }\r\n      updateData.profileImage = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  // Process signature image if uploaded\r\n  if (req.files?.signatureImage?.[0]) {\r\n    const result = await uploadSignatureImage(req.files.signatureImage[0]);\r\n    if (result.success && result.uploadData) {\r\n      // Delete old signature image if exists\r\n      if (user.signatureImage) {\r\n        await deleteFileFromS3(user.signatureImage).catch(console.error);\r\n      }\r\n      updateData.signatureImage = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  // Process Emirates ID document if uploaded\r\n  if (req.files?.emiratesIdDocument?.[0]) {\r\n    const result = await uploadEmiratesIdDocument(\r\n      req.files.emiratesIdDocument[0]\r\n    );\r\n    if (result.success && result.uploadData) {\r\n      // Delete old document if exists\r\n      if (user.emiratesIdDocument) {\r\n        await deleteFileFromS3(user.emiratesIdDocument).catch(console.error);\r\n      }\r\n      updateData.emiratesIdDocument = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  // Process Passport document if uploaded\r\n  if (req.files?.passportDocument?.[0]) {\r\n    const result = await uploadPassportDocument(req.files.passportDocument[0]);\r\n    if (result.success && result.uploadData) {\r\n      // Delete old document if exists\r\n      if (user.passportDocument) {\r\n        await deleteFileFromS3(user.passportDocument).catch(console.error);\r\n      }\r\n      updateData.passportDocument = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  // Handle document removals if requested\r\n  if (updateData.removeEmiratesIdDocument === \"true\") {\r\n    if (user.emiratesIdDocument) {\r\n      await deleteFileFromS3(user.emiratesIdDocument).catch(console.error);\r\n    }\r\n    updateData.emiratesIdDocument = undefined;\r\n    delete updateData.removeEmiratesIdDocument;\r\n  }\r\n\r\n  if (updateData.removePassportDocument === \"true\") {\r\n    if (user.passportDocument) {\r\n      await deleteFileFromS3(user.passportDocument).catch(console.error);\r\n    }\r\n    updateData.passportDocument = undefined;\r\n    delete updateData.removePassportDocument;\r\n  }\r\n\r\n  // Remove salary if role is being changed to admin/super_admin\r\n  if (updateData.role && [\"super_admin\", \"admin\"].includes(updateData.role)) {\r\n    updateData.salary = undefined;\r\n  }\r\n\r\n  const updatedUser = await User.findByIdAndUpdate(id, updateData, {\r\n    new: true,\r\n    select: \"-password\",\r\n  });\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, updatedUser, \"User updated successfully\"));\r\n});\r\n\r\nexport const deleteUser = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const user = await User.findById(id);\r\n  if (!user) {\r\n    throw new ApiError(404, \"User not found\");\r\n  }\r\n\r\n  // Prevent self-deletion\r\n  if (user._id.toString() === req.user?.userId) {\r\n    throw new ApiError(400, \"Cannot delete your own account\");\r\n  }\r\n\r\n  await User.findByIdAndDelete(id);\r\n\r\n  res.status(200).json(new ApiResponse(200, null, \"User deleted successfully\"));\r\n});\r\n\r\nexport const login = asyncHandler(async (req: Request, res: Response) => {\r\n  const { email, password } = req.body;\r\n\r\n  // Validate input\r\n  if (!email || !password) {\r\n    throw new ApiError(400, \"Email and password are required\");\r\n  }\r\n\r\n  // Find user by email\r\n  const user = await User.findOne({ email }).select(\"+password\");\r\n  if (!user) {\r\n    throw new ApiError(401, \"Invalid credentials\");\r\n  }\r\n\r\n  // Check if user is active\r\n  if (!user.isActive) {\r\n    throw new ApiError(403, \"Account is inactive. Please contact admin.\");\r\n  }\r\n\r\n  // Verify password\r\n  const isPasswordValid = await bcrypt.compare(password, user.password);\r\n  if (!isPasswordValid) {\r\n    throw new ApiError(401, \"Invalid credentials\");\r\n  }\r\n\r\n  // Create JWT token\r\n  const token = jwt.sign(\r\n    {\r\n      userId: user._id,\r\n      email: user.email,\r\n      role: user.role,\r\n    },\r\n    \"alghaza_secret\",\r\n    { expiresIn: \"7d\" }\r\n  );\r\n\r\n  // Remove password from response\r\n  const userResponse = user.toObject();\r\n  // delete userResponse.password;\r\n\r\n  // Set cookie (optional)\r\n  res.cookie(\"token\", token, {\r\n    httpOnly: true,\r\n    secure: process.env.NODE_ENV === \"production\",\r\n    maxAge: 1000 * 60 * 60 * 24 * 7, // 7 days\r\n  });\r\n\r\n  res.status(200).json(\r\n    new ApiResponse(\r\n      200,\r\n      {\r\n        token,\r\n        user: {\r\n          role: userResponse.role,\r\n          name: userResponse.firstName,\r\n          email: userResponse.email,\r\n        },\r\n      },\r\n      \"Login successful\"\r\n    )\r\n  );\r\n});\r\n\r\nexport const getActiveEngineers = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    const engineers = await User.find({\r\n      role: \"engineer\",\r\n      isActive: true,\r\n    }).select(\"-v -password\");\r\n\r\n    // Return response with pagination metadata\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          engineers,\r\n        },\r\n        \"Users retrieved successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n\r\nexport const getActiveDrivers = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    const drivers = await User.find({\r\n      role: \"driver\",\r\n      isActive: true,\r\n    }).select(\"-v -password\");\r\n    // console.log(drivers);\r\n\r\n    // Return response with pagination metadata\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          drivers,\r\n        },\r\n        \"drivers retrieved successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n\r\nexport const getActiveWorkers = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    const workers = await User.find({\r\n      role: \"worker\",\r\n      isActive: true,\r\n    }).select(\"-v -password\");\r\n    // console.log(drivers);\r\n\r\n    // Return response with pagination metadata\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          workers,\r\n        },\r\n        \"drivers retrieved successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n"]}